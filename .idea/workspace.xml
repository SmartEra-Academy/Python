<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3574fe31-6091-437c-a8e2-9660b28193c9" name="Changes" comment="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.&#10;&#10;Update: Added core program files and database management.&#10;&#10;I created the main program file and called app.gui within it to initialize the application’s user interface.&#10;I implemented all form-related code in the gui module to handle user input and display.&#10;I developed the data_manager.py file to manage the database operations, including CRUD (Create, Read, Update, Delete) functions and data validation.&#10;These changes provide a solid foundation for the application’s structure and ensure efficient data handling.&#10;Merge remote-tracking branch 'origin/smartera' into smartera">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Python" beforeDir="false" afterPath="$PROJECT_DIR$/Python" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="PUSH_TAGS">
      <GitPushTagMode>
        <option name="argument" value="--follow-tags" />
        <option name="title" value="Current Branch" />
      </GitPushTagMode>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/Python" />
    <option name="ROOT_SYNC" value="DONT_SYNC" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2lZFNQ6wsiG4O65n3g5qOh4rmLt" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python.main.executor": "Run",
    "Python.models.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "Bahareh-Behrouz",
    "last_opened_file_path": "C:/Users/ASUS/Desktop/school",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\ASUS\Desktop\school_smartera" />
    </key>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-09665e90c3a7-b11f5e8da5ad-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.15026.15" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3574fe31-6091-437c-a8e2-9660b28193c9" name="Changes" comment="" />
      <created>1725379650705</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1725379650705</updated>
      <workItem from="1725379651759" duration="8063000" />
      <workItem from="1725428674985" duration="4430000" />
    </task>
    <task id="LOCAL‎−۰۰۰۰۱" summary="Description:&#10;&#10;Created the initial folder structure for the project, including the following directories:&#10;&#10;.venv: Contains the Python virtual environment for managing dependencies.&#10;app: Holds the core application code and main modules.&#10;assets: Stores additional files like images, CSS, JavaScript, etc.&#10;data: Contains all necessary data files for the project.&#10;tests: Designed for writing and storing automated test cases for the project.&#10;This structure is intended to keep the project organized, making it easier to manage, develop, and maintain over time.">
      <option name="closed" value="true" />
      <created>1725386692937</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۱" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۱" />
      <updated>1725386692938</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۲" summary="Description:&#10;&#10;Created the initial folder structure for the project, including the following directories:&#10;&#10;.venv: Contains the Python virtual environment for managing dependencies.&#10;app: Holds the core application code and main modules.&#10;assets: Stores additional files like images, CSS, JavaScript, etc.&#10;data: Contains all necessary data files for the project.&#10;tests: Designed for writing and storing automated test cases for the project.&#10;This structure is intended to keep the project organized, making it easier to manage, develop, and maintain over time.">
      <option name="closed" value="true" />
      <created>1725386739874</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۲" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۲" />
      <updated>1725386739874</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۳" summary="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.">
      <option name="closed" value="true" />
      <created>1725390694806</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۳" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۳" />
      <updated>1725390694806</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۴" summary="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.">
      <option name="closed" value="true" />
      <created>1725390871551</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۴" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۴" />
      <updated>1725390871551</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۵" summary="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.">
      <option name="closed" value="true" />
      <created>1725391035303</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۵" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۵" />
      <updated>1725391035303</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۶" summary="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.&#10;&#10;Update: Added core program files and database management.&#10;&#10;I created the main program file and called app.gui within it to initialize the application’s user interface.&#10;I implemented all form-related code in the gui module to handle user input and display.&#10;I developed the data_manager.py file to manage the database operations, including CRUD (Create, Read, Update, Delete) functions and data validation.&#10;These changes provide a solid foundation for the application’s structure and ensure efficient data handling.">
      <option name="closed" value="true" />
      <created>1725392260236</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۶" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۶" />
      <updated>1725392260236</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۷" summary="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.&#10;&#10;Update: Added core program files and database management.&#10;&#10;I created the main program file and called app.gui within it to initialize the application’s user interface.&#10;I implemented all form-related code in the gui module to handle user input and display.&#10;I developed the data_manager.py file to manage the database operations, including CRUD (Create, Read, Update, Delete) functions and data validation.&#10;These changes provide a solid foundation for the application’s structure and ensure efficient data handling.">
      <option name="closed" value="true" />
      <created>1725392330593</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۷" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۷" />
      <updated>1725392330593</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۸" summary="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.&#10;&#10;Update: Added core program files and database management.&#10;&#10;I created the main program file and called app.gui within it to initialize the application’s user interface.&#10;I implemented all form-related code in the gui module to handle user input and display.&#10;I developed the data_manager.py file to manage the database operations, including CRUD (Create, Read, Update, Delete) functions and data validation.&#10;These changes provide a solid foundation for the application’s structure and ensure efficient data handling.">
      <option name="closed" value="true" />
      <created>1725428703442</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۸" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۸" />
      <updated>1725428703442</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۹" summary="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.&#10;&#10;Update: Added core program files and database management.&#10;&#10;I created the main program file and called app.gui within it to initialize the application’s user interface.&#10;I implemented all form-related code in the gui module to handle user input and display.&#10;I developed the data_manager.py file to manage the database operations, including CRUD (Create, Read, Update, Delete) functions and data validation.&#10;These changes provide a solid foundation for the application’s structure and ensure efficient data handling.">
      <option name="closed" value="true" />
      <created>1725431089192</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۹" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۹" />
      <updated>1725431089192</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۱۰" summary="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.&#10;&#10;Update: Added core program files and database management.&#10;&#10;I created the main program file and called app.gui within it to initialize the application’s user interface.&#10;I implemented all form-related code in the gui module to handle user input and display.&#10;I developed the data_manager.py file to manage the database operations, including CRUD (Create, Read, Update, Delete) functions and data validation.&#10;These changes provide a solid foundation for the application’s structure and ensure efficient data handling.">
      <option name="closed" value="true" />
      <created>1725431530741</created>
      <option name="number" value="LOCAL‎−۰۰۰۱۰" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۱۰" />
      <updated>1725431530741</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۱۱" summary="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.&#10;&#10;Update: Added core program files and database management.&#10;&#10;I created the main program file and called app.gui within it to initialize the application’s user interface.&#10;I implemented all form-related code in the gui module to handle user input and display.&#10;I developed the data_manager.py file to manage the database operations, including CRUD (Create, Read, Update, Delete) functions and data validation.&#10;These changes provide a solid foundation for the application’s structure and ensure efficient data handling.">
      <option name="closed" value="true" />
      <created>1725431570088</created>
      <option name="number" value="LOCAL‎−۰۰۰۱۱" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۱۱" />
      <updated>1725431570088</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۱۲" summary="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.&#10;&#10;Update: Added core program files and database management.&#10;&#10;I created the main program file and called app.gui within it to initialize the application’s user interface.&#10;I implemented all form-related code in the gui module to handle user input and display.&#10;I developed the data_manager.py file to manage the database operations, including CRUD (Create, Read, Update, Delete) functions and data validation.&#10;These changes provide a solid foundation for the application’s structure and ensure efficient data handling.">
      <option name="closed" value="true" />
      <created>1725431732499</created>
      <option name="number" value="LOCAL‎−۰۰۰۱۲" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۱۲" />
      <updated>1725431732499</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۱۳" summary="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.&#10;&#10;Update: Added core program files and database management.&#10;&#10;I created the main program file and called app.gui within it to initialize the application’s user interface.&#10;I implemented all form-related code in the gui module to handle user input and display.&#10;I developed the data_manager.py file to manage the database operations, including CRUD (Create, Read, Update, Delete) functions and data validation.&#10;These changes provide a solid foundation for the application’s structure and ensure efficient data handling.&#10;Merge remote-tracking branch 'origin/smartera' into smartera">
      <option name="closed" value="true" />
      <created>1725431947097</created>
      <option name="number" value="LOCAL‎−۰۰۰۱۳" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۱۳" />
      <updated>1725431947097</updated>
    </task>
    <option name="localTasksCounter" value="14" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Description:&#10;&#10;Created the initial folder structure for the project, including the following directories:&#10;&#10;.venv: Contains the Python virtual environment for managing dependencies.&#10;app: Holds the core application code and main modules.&#10;assets: Stores additional files like images, CSS, JavaScript, etc.&#10;data: Contains all necessary data files for the project.&#10;tests: Designed for writing and storing automated test cases for the project.&#10;This structure is intended to keep the project organized, making it easier to manage, develop, and maintain over time." />
    <MESSAGE value="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information." />
    <MESSAGE value="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.&#10;&#10;Update: Added core program files and database management.&#10;&#10;I created the main program file and called app.gui within it to initialize the application’s user interface.&#10;I implemented all form-related code in the gui module to handle user input and display.&#10;I developed the data_manager.py file to manage the database operations, including CRUD (Create, Read, Update, Delete) functions and data validation.&#10;These changes provide a solid foundation for the application’s structure and ensure efficient data handling." />
    <MESSAGE value="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.&#10;&#10;Update: Added core program files and database management.&#10;&#10;I created the main program file and called app.gui within it to initialize the application’s user interface.&#10;I implemented all form-related code in the gui module to handle user input and display.&#10;I developed the data_manager.py file to manage the database operations, including CRUD (Create, Read, Update, Delete) functions and data validation.&#10;These changes provide a solid foundation for the application’s structure and ensure efficient data handling.&#10;Merge remote-tracking branch 'origin/smartera' into smartera" />
    <option name="LAST_COMMIT_MESSAGE" value="I've added the models.py file to define the core data models for the student management system.&#10;&#10;The models.py file has been created to establish the foundational data structures.&#10;The Student class has been defined, including properties such as name, student ID, grade, and other relevant attributes.&#10;Initial methods for managing and accessing student data have been implemented.&#10;Additionally, a README.md file has been created to provide more information.&#10;&#10;Update: Added core program files and database management.&#10;&#10;I created the main program file and called app.gui within it to initialize the application’s user interface.&#10;I implemented all form-related code in the gui module to handle user input and display.&#10;I developed the data_manager.py file to manage the database operations, including CRUD (Create, Read, Update, Delete) functions and data validation.&#10;These changes provide a solid foundation for the application’s structure and ensure efficient data handling.&#10;Merge remote-tracking branch 'origin/smartera' into smartera" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Python/app/data_manager.py</url>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/school_smartera$main.coverage" NAME="main Coverage Results" MODIFIED="1725391945111" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Python" />
    <SUITE FILE_PATH="coverage/school_smartera$models.coverage" NAME="models Coverage Results" MODIFIED="1725391355494" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Python/app" />
  </component>
</project>